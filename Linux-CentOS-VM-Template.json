{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Admin username"
      }
    },
    "sshRSAPath": {
    "type": "string",
    "defaultValue": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
    "metadata": {
        "description": "Path to the RSA public key for SSH"
        }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "PEM-encoded public key"
        }
    },
    "CENTOSVersion": {
      "type": "string",
      "defaultValue": "7.0",
      "allowedValues": [
        "7.0"
      ],
      "metadata": {
        "description": "The CentOS Enterprise Linux version for the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_DS2_v2"
      ],
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VM instances to be created behind during resource loop"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "String to prefix the generation of the VM Name"
      }
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "DefaultNSG"
    },
    "fileUri": {
        "type": "string",
        "metadata": {
            "description": "Online path to the custom script to be executed by the custom script extension"
        }
    },
    "commandToExecute": {
      "type": "string",
      "metadata": {
        "description": "The command for the custom Script extension to execute - like 'sh script.sh"
      }
    },
    "workspaceID": {
      "type": "string",
      "metadata": {
        "description": "The ID of the OMS Log Analytics Workspace"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "The workspace key for the Log Analytics Workspace"
      }
    }
  },
  "variables": {
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "vnetId": "[resourceid(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('SubnetName'))]",
    "networkInterfaceNamePrefix": "VNic"
  },
  "resources": [
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), copyindex(), variables('networkInterfaceNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmNamePrefix'), copyindex(), '-ipconfig')]",
            "properties": {
              "networkSecurityGroup": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "virtualMachineLoop"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachines"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "OSProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
                    "ssh": {
            "publicKeys": [
              {
                "path": "[parameters('sshRSAPath')]",
                "keyData": "[parameters('sshRSAPublicKey')]"
              }
            ]
          }
        }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('CENTOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmNamePrefix'), copyIndex(), 'osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmNamePrefix'), copyIndex(), 'datadisk')]",
              "lun": 0,
              "diskSizeGB": 100,
              "createOption": "Empty",
              "caching": "ReadWrite"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyindex(), variables('networkInterfaceNamePrefix')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "name": "CustomScriptForLinux",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-04-30-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[parameters('fileUri')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[parameters('commandToExecute')]"
            }
          }
        },
        {
          "name": "Microsoft.EnterpriseCloud.Monitoring",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-04-30-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), copyindex()))]"
          ],
          "tags": {
            "displayName": "MMA"
          },
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "OmsAgentForLinux",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[parameters('workspaceId')]"
            },
            "protectedSettings": {
              "workspaceKey": "[parameters('workspaceKey')]"
            }
          }
        }
      ]
    }
  ]
}
